JSON
 4. Создать внешний репозиторий c названием JSON.
                              → 1) Repository name: JSON
 Sign in → Repositories → New → 2) Public                 → Create repository
                              → 3) Add a README file
                              
 5. Клонировать репозиторий JSON на локальный компьютер.
    1) Repositories → JSON → Code → copy HTTPS
    2) GIT BUSH
       git clone https://github.com/TatyanaKost/JSON.git

 6. Внутри локального JSON создать файл “new.json”.: touch new.json

 7. Добавить файл под гит.: git add new.json

 8. Закоммитить файл.: git commit -m start

 9. Отправить файл на внешний GitHub репозиторий.: git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 vim new.json
 {   
	"Author": "Kistykevich Tatyana Sergeevna",
	"Age": "24",
	"Pets": "0",
	"Salary": "5000 USD"
 }

 11. Отправить изменения на внешний репозиторий.: git commit -m part_2
                                                  git push
 12. Создать файл preferences.json: touch preferences.json
 
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 vim preferences.json
 {
     "Film": "Titanic",
     "TVseries": "Friends",
     "Food": "All fruits",
     "Year season": "Summer",
     "Country": "Thailand"
 }
 
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON:
 vim skills.json
 {
     "Test Documentation":"Types":[
          "First":"Check List",
          "Second":"Tast Case",
          "Third":"Bug Report",
          "Fourth":"Use Case"
     ],    
     "Black Box Test":"Types":[
          "First":"Функциональное тестирование",
	  "Second":"Нефункциональное тестирование",
	  "Third":"Регрессионное тестирование"
     ]	
 }

 15. Отправить сразу 2 файла на внешний репозиторий. git add . &&  git commit -m "first_touch"
                                                     git push                                                     

 16. На веб интерфейсе создать файл bug_report.json.: Repositories → JSON → Add file → Create new file

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.: Commit changes

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON: git pull